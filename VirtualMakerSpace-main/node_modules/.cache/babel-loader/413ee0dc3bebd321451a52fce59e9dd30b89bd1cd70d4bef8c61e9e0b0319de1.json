{"ast":null,"code":"var _jsxFileName = \"/Users/katallen/Documents/GitHub/AccessibleMakerspace/VirtualMakerSpace-main/src/Pages/projects.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ProjCard from \"../Components/projCard\";\nimport axios from 'axios';\n\n// todo \n// 1. create restriction of how many cards on page  -> const projectsPerpage = 12; \n// 2. implement search \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Project() {\n  _s();\n  const [idList, setIdList] = useState([]);\n  const [projectInfo, setProjects] = useState([]);\n\n  //on page load, get the projects \n  useEffect(() => {\n    requestProjects();\n  }, []);\n\n  // function makes the project request to backend \n  async function requestProjects() {\n    try {\n      //Handle Success\n      const response = await axios.post('/api/projects');\n      const newidList = response.data.map(element => element.projid);\n      setIdList(newidList);\n      setProjects(response.data);\n      console.log(\"Finished accessing information\");\n    } catch (error) {\n      // Handle error\n      console.error('Error getting projects:', error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardLayout\",\n      children: projectInfo.map(elem =>\n      /*#__PURE__*/\n      // send the project's information to the projCard component to create a custom card for each project \n      _jsxDEV(ProjCard, {\n        id: elem.projid,\n        info: elem\n      }, elem.projid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Project, \"KaU+e50UT4GYGVv3KV1KSFXIcno=\");\n_c = Project;\n;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useEffect","useState","ProjCard","axios","jsxDEV","_jsxDEV","Project","_s","idList","setIdList","projectInfo","setProjects","requestProjects","response","post","newidList","data","map","element","projid","console","log","error","children","className","elem","id","info","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/katallen/Documents/GitHub/AccessibleMakerspace/VirtualMakerSpace-main/src/Pages/projects.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport ProjCard from \"../Components/projCard\";\nimport axios from 'axios';\n\n// todo \n// 1. create restriction of how many cards on page  -> const projectsPerpage = 12; \n// 2. implement search \n\nexport default function Project(){\n  const [idList, setIdList] = useState([]);\n  const [projectInfo, setProjects] = useState([]);\n\n  //on page load, get the projects \n  useEffect(() => {\n    requestProjects();\n  }, []);\n\n  // function makes the project request to backend \n  async function requestProjects () {\n    try { //Handle Success\n      const response = await axios.post('/api/projects');\n      const newidList = response.data.map(element => element.projid);\n      setIdList(newidList);\n      setProjects(response.data);\n      console.log(\"Finished accessing information\");\n    } catch (error) { // Handle error\n    console.error('Error getting projects:', error);\n    }\n  }\n\n  return (\n    <div>\n      {/* Display are the projects from the server */}\n      <div className='cardLayout'>\n        {/* TODO: STYLE TAGS */}\n        {projectInfo.map(elem => (\n          // send the project's information to the projCard component to create a custom card for each project \n          <ProjCard key={elem.projid} id={elem.projid} info={elem}/>\n        ))}\n      </div>\n    </div>\n  );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,OAAOA,CAAA,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,WAAW,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE/C;EACAD,SAAS,CAAC,MAAM;IACdY,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,eAAeA,eAAeA,CAAA,EAAI;IAChC,IAAI;MAAE;MACJ,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,eAAe,CAAC;MAClD,MAAMC,SAAS,GAAGF,QAAQ,CAACG,IAAI,CAACC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,MAAM,CAAC;MAC9DV,SAAS,CAACM,SAAS,CAAC;MACpBJ,WAAW,CAACE,QAAQ,CAACG,IAAI,CAAC;MAC1BI,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAE;MAClBF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C;EACF;EAEA,oBACEjB,OAAA;IAAAkB,QAAA,eAEElB,OAAA;MAAKmB,SAAS,EAAC,YAAY;MAAAD,QAAA,EAExBb,WAAW,CAACO,GAAG,CAACQ,IAAI;MAAA;MACnB;MACApB,OAAA,CAACH,QAAQ;QAAmBwB,EAAE,EAAED,IAAI,CAACN,MAAO;QAACQ,IAAI,EAAEF;MAAK,GAAzCA,IAAI,CAACN,MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA+B,CAC1D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxB,EAAA,CAlCuBD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAkC9B;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}