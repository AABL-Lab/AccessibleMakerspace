{"ast":null,"code":"var _jsxFileName = \"/Users/katallen/Documents/GitHub/AccessibleMakerspace/VirtualMakerSpace-main/src/Pages/userPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ProjCard from \"../Components/projCard\";\nimport axios from 'axios';\n\n//Todo: restrict front end access to edit acces on userPage. user's shouldnt see the edit buttons or \n// delete button unless it is their page. The server verifies the user before nay changes are made but \n// theirs no feedback to frontend wheter change was successful. \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserPage() {\n  _s();\n  const [profilePic, setProfilePic] = useState(null);\n  const [displayName, setDisplayName] = useState(\"Edit Display Name\");\n  const [editMode, setEditMode] = useState(false);\n  const [savedClass, setSavedClass] = useState(\"\");\n  const [showChangePassword, setShowChangePassword] = useState(false);\n  const [oldPassword, setOldPassword] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [showPopup, setShowPopup] = useState(false);\n  const [confirmDelete, setConfirmDelete] = useState(false);\n  const [bio, setBio] = useState(\"Enter your bio here\");\n  const [newBio, setNewBio] = useState(\"\");\n  const [editBioMode, setBioEditMode] = useState(false);\n  const [userId, setSelectedUserId] = useState(\"\");\n  const [userData, setUserData] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [userProjects, setUserProjects] = useState([]);\n\n  // Retrieve the selected user's ID from sessionStorage\n  useEffect(() => {\n    setSelectedUserId(sessionStorage.getItem(\"selectedUserId\"));\n    setAccount(sessionStorage.getItem(\"account\"));\n    let user = sessionStorage.getItem(\"account\");\n    getSpecificProjects(user);\n  }, []);\n\n  // function that gets the user's projects \n  async function getSpecificProjects(user) {\n    try {\n      const response = await axios.post(`api/getUserProjects`, {\n        username: user\n      });\n      setUserProjects(response.data);\n    } catch (error) {\n      console.log(\"Getting User Projects Error: \" + error);\n    }\n  }\n\n  // get the user's id based on their account name \n  useEffect(() => {\n    if (account != null) {\n      const fetchUser = async () => {\n        try {\n          const response = await axios.post(`api/getUserByName`, {\n            userName: account\n          });\n          const userData = response.data;\n          // Update state with the fetched user data\n          setUserData(userData);\n          // You can set other state variables here if needed\n        } catch (error) {\n          console.error(\"Error fetching user data:\", error);\n        }\n      };\n      fetchUser();\n    } else {\n      console.error(\"No account found in session storage\");\n    }\n  }, [account]); //use affect depend on account variable not being null\n\n  //Populate information on userPage based on clicked userCard\n  useEffect(() => {\n    // const selectedUserId = sessionStorage.getItem(\"selectedUserId\");\n    if (userData != null) {\n      // Make a request to fetch the user's account information based on the ID\n      const fetchUser = async () => {\n        try {\n          const response = await axios.post(`api/getUsers`);\n          const userDataArray = response.data; // Assuming response.data is an array of user objects\n\n          // Retrieve the clicked user's ID from sessionStorage\n          const selectedUserId = sessionStorage.getItem(\"selectedUserId\");\n\n          // Filter the userDataArray to find the clicked user\n          const clickedUser = userDataArray.find(user => user.username === selectedUserId);\n\n          // Update state or perform other operations with the clicked user data\n          if (clickedUser) {\n            setDisplayName(clickedUser.displayname);\n            setBio(clickedUser.bio);\n            // Update other state variables as needed\n          }\n        } catch (error) {\n          console.error(\"Error fetching user data:\", error);\n        }\n      };\n      fetchUser();\n    } else {\n      console.error(\"No selected user ID found in sessionStorage\");\n    }\n  }, [userData]);\n\n  //allows user to change their account's profile photo \n  //todo: connect to backend functionality \n  const handlePictureChange = event => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfilePic(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  //change User's display name \n  //todo: connect to backend functionality \n  const handleDisplayNameChange = event => {\n    setDisplayName(event.target.value);\n  };\n  const handleEditToggle = () => {\n    setEditMode(!editMode);\n    setSavedClass(\"\");\n  };\n  const handleSaveDisplayName = () => {\n    setEditMode(false);\n    setSavedClass(\"saved\");\n  };\n  const handleShowChangePassword = () => {\n    setShowChangePassword(true);\n  };\n\n  //password verification \n  const handleChangePassword = () => {\n    const capitalLetterRegex = /[A-Z]/;\n    const numberRegex = /[0-9]/;\n    if (oldPassword && newPassword) {\n      if (!capitalLetterRegex.test(newPassword)) {\n        setPasswordError(\"Password must contain at least one capital letter.\");\n      } else if (!numberRegex.test(newPassword)) {\n        setPasswordError(\"Password must contain at least one number\");\n      } else {\n        // localStorage.setItem('userPassword', newPassword);\n        alert(\"Password changed successfully\");\n        setOldPassword(\"\");\n        setNewPassword(\"\");\n        setShowChangePassword(false);\n        setPasswordError(\"\"); // Reset error on success\n      }\n    } else {\n      alert(\"Please enter both old and new passwords.\");\n    }\n  };\n  const handleEditBio = () => {\n    setNewBio(bio);\n    setBioEditMode(true);\n  };\n  const handleSaveBio = () => {\n    setBio(newBio);\n    setBioEditMode(false);\n    alert(\"Bio saved successfully\");\n  };\n  const handleDeleteConfirmation = () => {\n    setConfirmDelete(true);\n  };\n  useEffect(() => {\n    if (confirmDelete) {\n      console.log(\"confirmed deletion\");\n      deleteUser();\n    }\n  }, [confirmDelete]);\n\n  // users can delete their accounts from server\n  // bug: any user can see other user's delete button but server wont allow them to complete the deletion\n  async function deleteUser() {\n    const account = sessionStorage.getItem('account');\n    const key = sessionStorage.getItem('key');\n    try {\n      const response = await axios.post('/api/deleteUser', {\n        username: account,\n        password: key\n      });\n      console.log(\"delete status: \", response.data);\n      //log user out by clearing all the storage information\n      sessionStorage.clear();\n      window.location.href = \"/\";\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n    }\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"profile-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"picture-container\",\n          children: [profilePic ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profilePic,\n              alt: \"Profile Preview\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Click to upload profile picture \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"profilePicInput\",\n            accept: \"image/*\",\n            onChange: handlePictureChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"display-name-container\",\n          children: editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter Display Name\",\n              value: displayName,\n              onChange: handleDisplayNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-button\",\n              onClick: handleSaveDisplayName,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 19\n              }, this), \" \", \"Save\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: handleEditToggle,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this), \" \", \"Edit\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"change-password\",\n          children: showChangePassword ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Old Password\",\n              value: oldPassword,\n              onChange: e => setOldPassword(e.target.value),\n              className: \"change-password-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"New Password\",\n              value: newPassword,\n              onChange: e => setNewPassword(e.target.value),\n              className: \"change-password-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"password-error\",\n              children: passwordError\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 35\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"change-password-button\",\n              onClick: handleChangePassword,\n              children: \"Change Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"change-password-link\",\n            onClick: handleShowChangePassword,\n            children: \"Change Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bio-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"bio-header\",\n            children: \"User Bio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), !editBioMode ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: bio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"edit-button\",\n              onClick: handleEditBio,\n              children: \"Edit Bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Enter your bio\",\n              value: newBio,\n              onChange: e => setNewBio(e.target.value),\n              className: \"bio-textarea\",\n              rows: \"5\",\n              cols: \"50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"save-button\",\n              onClick: handleSaveBio,\n              children: \"Save Bio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"project-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: \"500px\",\n            overflow: \"scroll\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"userCardLayout\",\n            children: userProjects.map(elem => /*#__PURE__*/_jsxDEV(ProjCard, {\n              id: elem.projid,\n              info: elem\n            }, elem.projid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"delete-row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"delete-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete_button_container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete_button\",\n            onClick: () => setShowPopup(true),\n            children: \" Delete Account \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-overlay\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"popup\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \" Are you sure you want to delete your account?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowPopup(false),\n              children: \" No \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDeleteConfirmation,\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(UserPage, \"xW7+hBxMt6+R9GCqRZghqnYcNcc=\");\n_c = UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useState","useEffect","ProjCard","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","UserPage","_s","profilePic","setProfilePic","displayName","setDisplayName","editMode","setEditMode","savedClass","setSavedClass","showChangePassword","setShowChangePassword","oldPassword","setOldPassword","newPassword","setNewPassword","passwordError","setPasswordError","showPopup","setShowPopup","confirmDelete","setConfirmDelete","bio","setBio","newBio","setNewBio","editBioMode","setBioEditMode","userId","setSelectedUserId","userData","setUserData","account","setAccount","userProjects","setUserProjects","sessionStorage","getItem","user","getSpecificProjects","response","post","username","data","error","console","log","fetchUser","userName","userDataArray","selectedUserId","clickedUser","find","displayname","handlePictureChange","event","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","handleDisplayNameChange","value","handleEditToggle","handleSaveDisplayName","handleShowChangePassword","handleChangePassword","capitalLetterRegex","numberRegex","test","alert","handleEditBio","handleSaveBio","handleDeleteConfirmation","deleteUser","key","password","clear","window","location","href","className","children","class","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","id","accept","onChange","placeholder","onClick","role","e","rows","cols","style","height","overflow","map","elem","projid","info","_c","$RefreshReg$"],"sources":["/Users/katallen/Documents/GitHub/AccessibleMakerspace/VirtualMakerSpace-main/src/Pages/userPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ProjCard from \"../Components/projCard\";\nimport axios from 'axios';\n\n//Todo: restrict front end access to edit acces on userPage. user's shouldnt see the edit buttons or \n// delete button unless it is their page. The server verifies the user before nay changes are made but \n// theirs no feedback to frontend wheter change was successful. \nexport default function UserPage() {\n  const [profilePic, setProfilePic] = useState(null); \n  const [displayName, setDisplayName] = useState(\"Edit Display Name\");  \n  const [editMode, setEditMode] = useState(false); \n  const [savedClass, setSavedClass] = useState(\"\");\n  const [showChangePassword, setShowChangePassword] = useState(false); \n  const [oldPassword, setOldPassword] = useState(\"\"); \n  const [newPassword, setNewPassword] = useState(\"\"); \n  const [passwordError, setPasswordError] = useState(\"\"); \n  const [showPopup, setShowPopup] = useState(false); \n  const [confirmDelete, setConfirmDelete] = useState(false); \n  const [bio, setBio] = useState(\"Enter your bio here\");\n  const [newBio, setNewBio] = useState(\"\");\n  const [editBioMode, setBioEditMode] = useState(false);\n  const [userId, setSelectedUserId] = useState(\"\");\n  const [userData, setUserData] = useState(\"\");\n  const [account, setAccount] = useState(\"\");\n  const [userProjects, setUserProjects] = useState([]);\n\n  // Retrieve the selected user's ID from sessionStorage\n  useEffect(() => {\n    setSelectedUserId(sessionStorage.getItem(\"selectedUserId\"));\n    setAccount(sessionStorage.getItem(\"account\"));\n    let user = sessionStorage.getItem(\"account\");\n    getSpecificProjects(user);\n  }, []);\n\n  // function that gets the user's projects \n  async function getSpecificProjects(user){\n    try {\n      const response = await axios.post(`api/getUserProjects`, { username: user });\n      setUserProjects(response.data);\n    }\n    catch (error){\n      console.log(\"Getting User Projects Error: \" + error);\n    }\n  }\n\n  // get the user's id based on their account name \n  useEffect(() => {\n    if (account != null) {\n      const fetchUser = async () => {\n        try {\n          const response = await axios.post(`api/getUserByName`, { userName: account });\n          const userData = response.data;\n          // Update state with the fetched user data\n          setUserData(userData);\n          // You can set other state variables here if needed\n        } catch (error) {\n          console.error(\"Error fetching user data:\", error);\n        }\n      };\n      fetchUser();\n    } else {\n      console.error(\"No account found in session storage\");\n    }\n  }, [account]); //use affect depend on account variable not being null\n\n  //Populate information on userPage based on clicked userCard\n  useEffect(() => {\n    // const selectedUserId = sessionStorage.getItem(\"selectedUserId\");\n    if (userData != null) {\n      // Make a request to fetch the user's account information based on the ID\n      const fetchUser = async () => {\n        try {\n          const response = await axios.post(`api/getUsers`);\n          const userDataArray = response.data; // Assuming response.data is an array of user objects\n\n          // Retrieve the clicked user's ID from sessionStorage\n          const selectedUserId = sessionStorage.getItem(\"selectedUserId\");\n\n          // Filter the userDataArray to find the clicked user\n          const clickedUser = userDataArray.find(user => user.username === selectedUserId);\n\n          // Update state or perform other operations with the clicked user data\n          if (clickedUser) {\n            setDisplayName(clickedUser.displayname);\n            setBio(clickedUser.bio);\n            // Update other state variables as needed\n          }\n        } catch (error) {\n          console.error(\"Error fetching user data:\", error);\n        }\n      };\n      fetchUser();\n    } else {\n      console.error(\"No selected user ID found in sessionStorage\");\n    }\n  }, [userData])\n\n  //allows user to change their account's profile photo \n  //todo: connect to backend functionality \n  const handlePictureChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        setProfilePic(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  //change User's display name \n  //todo: connect to backend functionality \n  const handleDisplayNameChange = (event) => {\n    setDisplayName(event.target.value);\n  };\n\n  const handleEditToggle = () => {\n    setEditMode(!editMode);\n    setSavedClass(\"\");\n  };\n\n  const handleSaveDisplayName = () => {\n    setEditMode(false);\n    setSavedClass(\"saved\");\n  };\n\n  const handleShowChangePassword = () => {\n    setShowChangePassword(true);\n  };\n  \n  //password verification \n  const handleChangePassword = () => {\n    const capitalLetterRegex = /[A-Z]/;\n    const numberRegex = /[0-9]/;\n\n    if (oldPassword && newPassword) {\n      if (!capitalLetterRegex.test(newPassword)) {\n        setPasswordError(\"Password must contain at least one capital letter.\");\n      } else if (!numberRegex.test(newPassword)) {\n        setPasswordError(\"Password must contain at least one number\");\n      } else {\n        // localStorage.setItem('userPassword', newPassword);\n        alert(\"Password changed successfully\");\n        setOldPassword(\"\");\n        setNewPassword(\"\");\n        setShowChangePassword(false);\n        setPasswordError(\"\"); // Reset error on success\n      }\n    } else {\n      alert(\"Please enter both old and new passwords.\");\n    }\n  };\n\n  const handleEditBio = () => {\n    setNewBio(bio);\n    setBioEditMode(true);\n  };\n\n  const handleSaveBio = () => {\n    setBio(newBio);\n    setBioEditMode(false);\n    alert(\"Bio saved successfully\");\n  };\n\n  const handleDeleteConfirmation = () => {\n    setConfirmDelete(true);\n  };\n\n  useEffect(() => {\n    if (confirmDelete) {\n      console.log(\"confirmed deletion\");\n      deleteUser();\n    }\n  }, [confirmDelete]);\n\n  // users can delete their accounts from server\n  // bug: any user can see other user's delete button but server wont allow them to complete the deletion\n  async function deleteUser() {\n    const account = sessionStorage.getItem('account');\n    const key = sessionStorage.getItem('key');\n\n    try {\n      const response = await axios.post('/api/deleteUser', { username: account, password: key });\n      console.log(\"delete status: \", response.data);\n      //log user out by clearing all the storage information\n      sessionStorage.clear();\n      window.location.href = \"/\";\n    } catch (error) {\n      console.error(\"Error deleting user:\", error);\n    }\n  };\n\n  return (\n    <div className=\"profile-grid-container\">\n      <div class=\"profile-row\">\n        {/* First column */}\n        <div className=\"column-1\">\n          <div className=\"picture-container\">\n            {profilePic ? (\n              <>\n                <img src={profilePic} alt=\"Profile Preview\" />\n              </>\n            ) : (\n                <span>Click to upload profile picture </span> \n              )}\n\n            {/* Input for selecting an image file */}\n            <input\n              type=\"file\"\n              id=\"profilePicInput\"\n              accept=\"image/*\"\n              onChange={handlePictureChange}\n            />\n          </div>\n\n          {/* Display name container */}\n          <div className=\"display-name-container\">\n            {editMode ? (\n              <>\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter Display Name\"\n                  value={displayName}\n                  onChange={handleDisplayNameChange}\n                />\n                <button className=\"save-button\" onClick={handleSaveDisplayName}>\n                  <span role=\"img\" aria-label=\"Save\">\n                  </span>{\" \"}\n                  Save\n                </button>\n              </>\n            ) : (\n                <>\n                  <span>{displayName}</span>\n                  <button className=\"edit-button\" onClick={handleEditToggle}>\n                    <span role=\"img\" aria-label=\"Edit\">\n                    </span>{\" \"}\n                    Edit\n                  </button>\n                </>\n              )}\n          </div>\n\n          {/* Change password */}\n          <div className=\"change-password\">\n            {showChangePassword ? (\n              <>\n                <input\n                  type=\"password\"\n                  placeholder=\"Old Password\"\n                  value={oldPassword}\n                  onChange={(e) => setOldPassword(e.target.value)}\n                  className=\"change-password-input\"\n                />\n                <input\n                  type=\"password\"\n                  placeholder=\"New Password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  className=\"change-password-input\"\n                />\n\n                {passwordError && <div className=\"password-error\">{passwordError}</div>}\n                <button className=\"change-password-button\" onClick={handleChangePassword}>\n                  Change Password\n                </button>\n              </>\n            ) : (\n                <div className=\"change-password-link\" onClick={handleShowChangePassword}>\n                  Change Password\n                </div>\n              )}\n          </div>\n        </div>\n\n\n        {/* Second column */}\n        <div className=\"column-2\">\n          <div className=\"bio-container\">\n            <h2 className=\"bio-header\">User Bio</h2>\n            {!editBioMode ? (\n              <div>\n                <p>{bio}</p>\n                <button className=\"edit-button\" onClick={handleEditBio}>\n                  Edit Bio\n                </button>\n              </div>\n            ) : (\n                <div>\n                  <textarea\n                    placeholder=\"Enter your bio\"\n                    value={newBio}\n                    onChange={(e) => setNewBio(e.target.value)}\n                    className=\"bio-textarea\"\n                    rows=\"5\"\n                    cols=\"50\"\n                  />\n                  <button className=\"save-button\" onClick={handleSaveBio}>\n                    Save Bio\n                  </button>\n                </div>\n              )}\n          </div>\n        </div>\n      </div>\n\n      <div class=\"project-row\">\n        <div className=\"project-column\">\n          <h2>Your Projects</h2>\n          <div style={{height: \"500px\", overflow:\"scroll\"}}>\n            <div className='userCardLayout'>\n              {userProjects.map(elem => (\n                <ProjCard key={elem.projid} id={elem.projid} info={elem}/>\n              ))}\n            </div>\n          </div>\n        </div>  \n      </div>\n    \n      <div class=\"delete-row\">\n        <div className=\"delete-column\">\n          <div className=\"delete_button_container\">\n            <button className=\"delete_button\" onClick={() => setShowPopup(true)}> Delete Account </button>\n          </div>\n          {showPopup && (\n            <div className=\"modal-overlay\">\n              <div className=\"popup\">\n                <p> Are you sure you want to delete your account?</p>\n                <button onClick={() => setShowPopup(false)}> No </button>\n                <button onClick={handleDeleteConfirmation}>Yes</button>\n              </div>\n            </div>\n          )}\n        </div>  \n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}