{"ast":null,"code":"var _jsxFileName = \"/Users/katallen/Documents/GitHub/AccessibleMakerspace/VirtualMakerSpace-main/src/Components/FilterableDropdown.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\n\n// TODO: FIX SHowing of ERROR  skills = [] when in edit mode \nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function FilterableDropdown({\n  options,\n  hideLevel,\n  skills,\n  setSkills,\n  typedTag = [],\n  setTypedTag,\n  id\n}) {\n  _s();\n  const [filterText, setFilterText] = useState('');\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  const [selectedSkill, setSelectedSkill] = useState(\"\");\n  const [selectedSkillLevel, setSelectedSkillLevel] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState(\"\");\n  const [possibleErrors, setPossibleErrors] = useState({\n    maxAdditions: false,\n    incompleteCompletion: false\n  });\n\n  //onces the list of tags/skills is pulled from server, add options to the dropdown options\n  useEffect(() => {\n    setFilteredOptions(options);\n  }, [options]);\n\n  //when the add button is clicked, we add either the skill or tag to their prefer storage arrays\n  const handleActionButtonClick = () => {\n    if (id == \"skills\") {\n      if (selectedSkill !== \"\" && selectedSkillLevel !== \"\") {\n        // note: to not overwhelm users, we set a hard 5 skills & tags limit\n        if (skills.length === 5) {\n          setPossibleErrors(prevState => ({\n            ...prevState,\n            maxAdditions: true\n          }));\n        }\n        const newSkill = {\n          skill: selectedSkill,\n          skillLevel: selectedSkillLevel\n        };\n        setSkills(prevSkills => [...prevSkills, newSkill]);\n      } else {\n        //User didn't complete skills form\n        setPossibleErrors(prevState => ({\n          ...prevState,\n          incompleteCompletion: true\n        }));\n        return; // Exit the function to prevent adding more skills\n      }\n    }\n    if (typedTag.length === 5) {\n      console.log(typedTag.length);\n      console.log(\"max hit\");\n      setPossibleErrors(prevState => ({\n        ...prevState,\n        maxAdditions: true\n      }));\n      return; // Exit the function to prevent adding more tags\n    }\n    if (selectedTags !== \"\") {\n      setTypedTag(prevTag => [...prevTag, selectedTags]);\n    }\n  };\n\n  //when x is clicked, the tag is removed\n  const handleRemoveTag = index => {\n    const updatedTags = [...typedTag];\n    updatedTags.splice(index, 1);\n    setTypedTag(updatedTags);\n  };\n  const inputRef = useRef(null);\n  //as changes are made to the input box, the dropdown list is filtered to show existing possible options\n  const handleInputChange = e => {\n    console.log(\"adding\");\n    setPossibleErrors(prevState => ({\n      ...prevState,\n      incompleteCompletion: false\n    }));\n    const searchText = e.target.value;\n    setFilterText(searchText);\n    setShowDropdown(true); // Always show dropdown when there is text\n    // Filter options based on input\n    const filtered = options.filter(option => option.toLowerCase().includes(searchText.toLowerCase()));\n    if (filtered.length === 0) {\n      setShowDropdown(false);\n    }\n    setFilteredOptions(filtered);\n    if (id === \"skills\") {\n      setSelectedSkill(searchText);\n    }\n    if (id === \"tags\") {\n      setSelectedTags(searchText);\n    }\n  };\n\n  //add selected skills or tag to their respective array\n  const handleSelectOption = selectedOption => {\n    setFilterText(selectedOption); // Set selected option as filter text\n    setShowDropdown(false); // Hide dropdown after selection\n    if (id === \"skills\") {\n      setSelectedSkill(selectedOption);\n    } else if (id === \"tags\") {\n      setSelectedTags(selectedOption);\n    }\n    if (inputRef.current) {\n      inputRef.current.value = selectedOption; // Set input value directly using ref\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && filteredOptions.length === 1) {\n      setFilterText(filteredOptions[0]); // Set the first filtered option as filter text when Enter is pressed\n      setShowDropdown(false); // Hide dropdown after pressing Enter\n    }\n  };\n\n  //when x is clicked, the skill is removed\n  const handleDeleteSkill = index => {\n    // Create a copy of the skills array\n    const updatedSkills = [...skills];\n    // Remove the skill at the specified index\n    updatedSkills.splice(index, 1);\n    // Update the state with the new skills array\n    setSkills(updatedSkills);\n    setPossibleErrors(prevState => ({\n      ...prevState,\n      maxAdditions: false\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container_two\",\n      children: [possibleErrors.maxAdditions ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" You have reached your limit. Please remove an attribute before adding another. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 16\n      }, this), possibleErrors.incompleteCompletion ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \" You have not added a skill or a skill level, please complete the input. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alignGrouping\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: filterText,\n            onChange: handleInputChange,\n            onFocus: () => setShowDropdown(true) // Show dropdown when input is focused\n            ,\n            placeholder: \"Add relevent skills\",\n            className: \"dropdownBox\",\n            onKeyDown: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdownBox\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"dropdown\",\n              size: filteredOptions.length,\n              onChange: e => handleSelectOption(e.target.value),\n              children: filteredOptions.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: option,\n                children: option\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 9\n        }, this), hideLevel ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"levelDropdown\",\n          className: \"dropdown2\",\n          value: selectedSkillLevel,\n          onChange: e => setSelectedSkillLevel(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            selected: true,\n            children: \"Skill level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Beginner\",\n            children: \"Beginner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Intermediate\",\n            children: \"Intermediate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Experienced\",\n            children: \"Experienced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Advanced\",\n            children: \"Advanced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"action-button\",\n          onClick: handleActionButtonClick,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this), hideLevel ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this) : skills.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-style\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Skill\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Skill Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: skills.slice(0, 5).map((skill, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: skill.skill\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [skill.skillLevel, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"deleteButton\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteSkill(index),\n                  children: \" X \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 73\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 42\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array.isArray(typedTag) && typedTag.map((tag, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tag\",\n        children: [tag, /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            marginRight: '5px'\n          },\n          children: tag\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => handleRemoveTag(index),\n          style: {\n            color: 'red',\n            cursor: 'pointer'\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 10\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(FilterableDropdown, \"k2LoSU7pAJCCBFgIRX4CSeFJTNI=\");\n_c = FilterableDropdown;\n;\nvar _c;\n$RefreshReg$(_c, \"FilterableDropdown\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","FilterableDropdown","options","hideLevel","skills","setSkills","typedTag","setTypedTag","id","_s","filterText","setFilterText","showDropdown","setShowDropdown","filteredOptions","setFilteredOptions","selectedSkill","setSelectedSkill","selectedSkillLevel","setSelectedSkillLevel","selectedTags","setSelectedTags","possibleErrors","setPossibleErrors","maxAdditions","incompleteCompletion","handleActionButtonClick","length","prevState","newSkill","skill","skillLevel","prevSkills","console","log","prevTag","handleRemoveTag","index","updatedTags","splice","inputRef","handleInputChange","e","searchText","target","value","filtered","filter","option","toLowerCase","includes","handleSelectOption","selectedOption","current","handleKeyPress","key","handleDeleteSkill","updatedSkills","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","display","type","onChange","onFocus","placeholder","onKeyDown","size","map","disabled","selected","onClick","slice","Array","isArray","tag","marginRight","color","cursor","_c","$RefreshReg$"],"sources":["/Users/katallen/Documents/GitHub/AccessibleMakerspace/VirtualMakerSpace-main/src/Components/FilterableDropdown.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\n// TODO: FIX SHowing of ERROR  skills = [] when in edit mode \n\nexport default function FilterableDropdown({options, hideLevel, skills, setSkills, typedTag = [], setTypedTag, id}){\n  const [filterText, setFilterText] = useState('');\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [filteredOptions, setFilteredOptions] = useState([]);\n  const [selectedSkill, setSelectedSkill] = useState(\"\"); \n  const [selectedSkillLevel, setSelectedSkillLevel] = useState(\"\");\n  const [selectedTags, setSelectedTags] = useState(\"\"); \n  const [possibleErrors, setPossibleErrors] = useState({\n    maxAdditions: false,\n    incompleteCompletion: false,\n  });\n\n  //onces the list of tags/skills is pulled from server, add options to the dropdown options\n  useEffect(() => {\n    setFilteredOptions(options);\n  }, [options]);\n\n  //when the add button is clicked, we add either the skill or tag to their prefer storage arrays\n  const handleActionButtonClick = () => {\n    if (id == \"skills\") {\n    if (selectedSkill !== \"\" && selectedSkillLevel !== \"\"){\n      // note: to not overwhelm users, we set a hard 5 skills & tags limit\n      if(skills.length === 5){\n        setPossibleErrors(prevState => ({\n          ...prevState,\n          maxAdditions: true\n        }));\n      }\n\n      const newSkill = {\n        skill: selectedSkill, \n        skillLevel: selectedSkillLevel \n      }; \n      setSkills((prevSkills) => [...prevSkills, newSkill]); \n    }else{ //User didn't complete skills form\n      setPossibleErrors(prevState => ({\n        ...prevState,\n        incompleteCompletion: true\n      }));\n      return; // Exit the function to prevent adding more skills\n    }\n    }\n\n    if(typedTag.length === 5){\n      console.log(typedTag.length);\n      console.log(\"max hit\");\n      setPossibleErrors(prevState => ({\n          ...prevState,\n          maxAdditions: true\n      }));\n      return; // Exit the function to prevent adding more tags\n    }\n\n    if(selectedTags !== \"\"){\n      setTypedTag((prevTag) => [...prevTag, selectedTags]); \n    }\n  };\n\n  //when x is clicked, the tag is removed\n  const handleRemoveTag = (index) => {\n    const updatedTags = [...typedTag];\n    updatedTags.splice(index, 1);\n    setTypedTag(updatedTags);\n  };\n\n  const inputRef = useRef(null);\n  //as changes are made to the input box, the dropdown list is filtered to show existing possible options\n  const handleInputChange = (e) => {\n    console.log(\"adding\");\n    setPossibleErrors(prevState => ({\n      ...prevState,\n      incompleteCompletion: false\n    }));\n    const searchText = e.target.value;\n    setFilterText(searchText);\n    setShowDropdown(true); // Always show dropdown when there is text\n    // Filter options based on input\n    const filtered = options.filter(option =>\n      option.toLowerCase().includes(searchText.toLowerCase())\n    );\n\n    if(filtered.length === 0){\n      setShowDropdown(false);\n    }\n    setFilteredOptions(filtered);\n    if(id === \"skills\"){\n      setSelectedSkill(searchText);\n    }\n    if(id === \"tags\"){\n      setSelectedTags(searchText);\n    }\n    \n  };\n\n  //add selected skills or tag to their respective array\n  const handleSelectOption = (selectedOption) => {\n    setFilterText(selectedOption); // Set selected option as filter text\n    setShowDropdown(false); // Hide dropdown after selection\n    if(id === \"skills\"){\n      setSelectedSkill(selectedOption);\n    }else if(id === \"tags\"){\n      setSelectedTags(selectedOption);\n    }\n\n    if (inputRef.current) {\n      inputRef.current.value = selectedOption; // Set input value directly using ref\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && filteredOptions.length === 1) {\n      setFilterText(filteredOptions[0]); // Set the first filtered option as filter text when Enter is pressed\n      setShowDropdown(false); // Hide dropdown after pressing Enter\n    }\n  };\n\n  //when x is clicked, the skill is removed\n  const handleDeleteSkill = (index) => {\n    // Create a copy of the skills array\n    const updatedSkills = [...skills];\n    // Remove the skill at the specified index\n    updatedSkills.splice(index, 1);\n    // Update the state with the new skills array\n    setSkills(updatedSkills);\n    setPossibleErrors(prevState => ({\n      ...prevState,\n      maxAdditions: false\n    }));\n  };\n\n  return(\n    <>\n    <div className=\"container_two\">\n      {/* error messaging */}\n      {possibleErrors.maxAdditions ? (\n      <div> \n        <h2> You have reached your limit. Please remove an attribute before \n        adding another. </h2>\n      </div>):(<div style={{ display: 'none' }}></div>)}\n\n      {possibleErrors.incompleteCompletion ? (\n        <div>\n          <h2> You have not added a skill or a skill level, please complete the input. </h2>\n        </div>\n      ):( <div style={{ display: 'none' }}></div> )}\n      <div className=\"dropdown-container\">\n        <div className=\"alignGrouping\">\n          <input\n            type=\"text\"\n            value={filterText}\n            onChange={handleInputChange}\n            onFocus={() => setShowDropdown(true)} // Show dropdown when input is focused\n            placeholder=\"Add relevent skills\"\n            className=\"dropdownBox\"\n            onKeyDown={handleKeyPress}\n          />\n          {showDropdown && (\n            <div className=\"dropdownBox\"> \n            <select className=\"dropdown\" size={filteredOptions.length} \n            onChange={(e) => handleSelectOption(e.target.value)}>\n              {filteredOptions.map((option, index) => (\n                <option key={index} value={option}>\n                  {option}\n                </option>\n              ))}\n            </select>\n          </div>\n          )}\n        </div>\n\n        {/* since the smae component is used for tags & skills, \n        but tags dont have a levels aspect so hide that piece  */}\n        {hideLevel ? (\n          <div></div>\n        ):(\n          <select id=\"levelDropdown\"\n            className=\"dropdown2\"\n            value={selectedSkillLevel}\n            onChange={(e) => setSelectedSkillLevel(e.target.value)}>\n            <option value=\"\" disabled selected>Skill level</option>\n            <option value=\"Beginner\">Beginner</option>\n            <option value=\"Intermediate\">Intermediate</option>\n            <option value=\"Experienced\">Experienced</option>\n            <option value=\"Advanced\">Advanced</option>\n          </select>\n        )}\n        <button className=\"action-button\" onClick={handleActionButtonClick}>Add</button>\n      </div>\n    </div>\n\n    {hideLevel ? (\n      <div></div>\n    ) : (\n      (skills.length > 0 && (\n        <div className=\"table-style\">\n          <table>\n            <thead>\n              <tr>\n                <th>Skill</th>\n                <th>Skill Level</th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* TODO: RESTRICT TO 5 not only just showing 5 but can only upload 5 */}\n              {/* Maps skills content within table to 5 items. */}\n              {skills.slice(0, 5).map((skill, index) => (\n                <tr key={index}>\n                  <td>{skill.skill}</td>\n                  <td>{skill.skillLevel} <div className=\"deleteButton\"> <button onClick={() => handleDeleteSkill(index)}> X </button></div> </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n\n        </div>\n      ))\n    )}\n    <div>\n      {/* displaying tags */}\n      {Array.isArray(typedTag) && typedTag.map((tag, index) => (\n        <div key={index} className=\"tag\">\n          {tag}\n         <span style={{marginRight: '5px' }}>{tag}</span>\n         <span onClick={() => handleRemoveTag(index)} style={{ color: 'red', cursor: 'pointer' }}>X</span>\n\n        </div>\n      ))}\n    </div>\n    </>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}